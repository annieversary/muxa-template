#!/bin/sh
set -e

if [ ! "$1" = "get-template" ] && [ ! "$1" = "get-vars" ]; then

# normal template-outputing block

# variable declarations
name=''

# parse arguments
while test $# -gt 0; do
  case "$1" in
    --name)
      shift
      name="$1"
      shift
      ;;
    *)
      echo "route:"
      echo "generates file at src/routes/NAME.rs"
      echo ""
      echo "options:"
      echo "-h, --help      show brief help"
      echo "--name NAME     filename (without extension)"
      exit 0
      ;;
  esac
done

# check that all variables have values
if [ -z "$name" ] && [ -t 1 ]; then
  echo "Error: No value provided for name"
  exit 1
fi

out="use super::*;

pub async fn \${name}(
    _: \${name}Path,
    Extension(html): Extension<HtmlContextBuilder>,
    Extension(_session): Extension<UserSession>,
    Extension(_pool): Extension<\${db}Pool>,
    Extension(_config): Extension<Config>,
) -> impl IntoResponse {
    let content = html! {
        h1 {
            \\\"\${name}\\\"
        }
    };

    Ok::<_, ErrResponse>(html.build(content))
}"
if [ -t 1 ] ; then
  mkdir -p "src/routes"

  # check if file exists
  if [ -f "src/routes/${name}.rs" ] ; then
     read -r -p "File already exists, overwrite? [y/N] " response
     case "$response" in
       [yY][eE][sS]|[yY])
         ;;
       *)
         echo "Stopping"
         exit 1
         ;;
     esac
  fi

  echo "$out" > "src/routes/${name}.rs"
  echo "created file at src/routes/${name}.rs";
else
  echo "$out"
fi

# end normal block
fi

# template editing section

if [ "$1" = "get-template" ]; then
echo "use super::*;

pub async fn \\${name}(
    _: \\${name}Path,
    Extension(html): Extension<HtmlContextBuilder>,
    Extension(_session): Extension<UserSession>,
    Extension(_pool): Extension<\\${db}Pool>,
    Extension(_config): Extension<Config>,
) -> impl IntoResponse {
    let content = html! {
        h1 {
            \\\\"\\${name}\\\\"
        }
    };

    Ok::<_, ErrResponse>(html.build(content))
}"
fi

if [ "$1" = "get-vars" ]; then
echo "
default_path=\"src/routes/name.rs\"

[defaults]

[descriptions]

"
fi
